{"version":3,"file":"bundle.js","sources":["../src/utils.js","../src/createElement.js","../src/createDOM.js","../src/render.js","../src/constants.js","../src/diff.js","../src/patch.js","../src/index.js","../examples/index.js"],"sourcesContent":["let utils = {};\n\nutils.isType = (type, target) => {\n  return Object.prototype.toString.call(target) === `[object ${type}]`;\n};\n\n[\n  'String',\n  'Boolean',\n  'Number',\n  'Array',\n  'Function',\n  'Object',\n  'Date',\n  'RegExp',\n  'Error',\n  'Null',\n].forEach(type => {\n  utils[`is${type}`] = target => utils.isType(type, target);\n});\n\n// props 中关于 html 属性的处理\n// 暂时只处理一部分，仅供演示\n// 注意 className、内联样式 style\nutils.setAttrs = (el, props) => {\n  for (let key in props) {\n    if (['id', 'href', 'value'].indexOf(key) !== -1) {\n      el.setAttribute(key, props[key]);\n    }\n    if (key === 'className') {\n      el.setAttribute('class', props['className']);\n    }\n    if (key === 'style') {\n      for (let p in props.style) {\n        el.style[p] = props.style[p];\n      }\n    }\n  }\n};\n\nexport default utils;\n","// use @babel/plugin-transform-react-jsx to parse jsx\n// we should implement the createElement function\n// https://babeljs.io/docs/en/next/babel-plugin-transform-react-jsx.html\n\nimport utils from './utils';\n\nfunction createElement(type, props, ...children) {\n  // 嵌套 children 的特殊处理，二维变一维\n  // jsx 被 babel-plugin-transform-react-jsx 编译后的一种情况\n  if (children.length === 1 && utils.isArray(children[0])) {\n    children = !children[0].length ? [] : children[0];\n  }\n\n  let vnode = {\n    key: (props && props.key) || null,\n    type: type,\n    props: props ? props : {},\n    children,\n  };\n\n  return vnode;\n}\n\nexport default createElement;\n","import utils from './utils';\n\nfunction createDOM(vnode) {\n  if (utils.isNull(vnode)) {\n    return document.createTextNode('');\n  }\n\n  let { type, props, children } = vnode;\n\n  // type 类型判断，按照 React 的套路，可能是html标签(String)、函数(Function)、React组件(Component)，\n  // 这里暂时只处理html标签及文本的情况\n  // jsx 解析后文本为字符串(不再有子节点) children: ['text']\n  // html标签会解析为对象(需要再去查看子节点) { type: 'div', props: { id: 'container' }, children: [...]}\n\n  if (utils.isString(vnode)) {\n    return document.createTextNode(vnode);\n  }\n\n  let el = document.createElement(type);\n  utils.setAttrs(el, props);\n\n  if (!children) {\n    return el;\n  }\n\n  // 常规写法:\n  // children.forEach(child => {\n  //   el.appendChild(createDOM(child));\n  // });\n\n  // 精简写法:\n  let appendChild = el.appendChild.bind(el);\n  children.map(createDOM).map(appendChild);\n\n  return el;\n}\n\nexport default createDOM;\n","function render(vdom, el) {\n  el.appendChild(vdom);\n}\n\nexport default render;\n","// patchType 定义\n\n// 插入节点\nexport const INSERT = 'INSERT';\n\n// 删除节点\nexport const REMOVE = 'REMOVE';\n\n// 替换节点\nexport const REPLACE = 'REPLACE';\n\n// 重新排列节点\nexport const ORDER = 'ORDER';\n\n// 属性修改\nexport const PROPS = 'PROPS';\n\n// 文本修改\nexport const TEXT = 'TEXT';\n","import utils from './utils';\nimport { INSERT, REMOVE, PROPS, TEXT, REPLACE, ORDER } from './constants';\n\nfunction diff(tree, newTree) {\n  // console.log('diff');\n  let index = 0;\n  let patches = {};\n\n  return diffNode(tree, newTree, index, patches);\n}\n\nfunction diffNode(oldNode, newNode, index, patches) {\n  // let patches = {};\n  let currentPatch = [];\n\n  // console.log(`DIFF STEPS: ${index}: `, oldNode, newNode);\n\n  if (!newNode) {\n    // currentPatch.push({\n    //   type: REMOVE,\n    // });\n  } else if (utils.isString(oldNode) && utils.isString(newNode)) {\n    if (oldNode !== newNode) {\n      currentPatch.push({\n        type: TEXT,\n        content: newNode,\n      });\n    }\n  } else if (\n    oldNode &&\n    newNode &&\n    oldNode.type === newNode.type &&\n    oldNode.key === newNode.key\n  ) {\n    let propsPatches = diffProps(oldNode.props, newNode.props);\n\n    if (Object.keys(propsPatches).length) {\n      currentPatch.push({\n        type: PROPS,\n        props: propsPatches,\n      });\n    }\n\n    // 对比子节点\n    // todo\n    diffChildren(\n      oldNode.children,\n      newNode.children,\n      index,\n      patches,\n      currentPatch\n    );\n  } else {\n    currentPatch.push({\n      type: REPLACE,\n      node: newNode,\n    });\n  }\n\n  // console.log(`GOTO patchs[index] -- ${index}`);\n\n  if (currentPatch.length) {\n    // console.log(patches);\n    patches[index] = currentPatch;\n  }\n\n  return patches;\n}\n\nfunction diffChildren(oldChildren, newChildren, index, patches, currentPatch) {\n  console.log('oldChildren, newChildren: ', oldChildren, newChildren);\n  let diffs = diffList(oldChildren, newChildren);\n\n  console.log(diffs);\n\n  if (diffs.moves.length) {\n    currentPatch.push({\n      type: ORDER,\n      moves: diffs.moves,\n    });\n  }\n\n  newChildren = diffs.nodes;\n\n  let count = 0;\n  for (var i = 0; i < oldChildren.length || i < newChildren.length; i++) {\n    let oldNode = oldChildren[i];\n    let newNode = newChildren[i];\n    // console.log(`i -- index -- count : ${i}-${index}-${count}`);\n    // count++;\n    index++;\n    diffNode(oldNode, newNode, i + index, patches);\n  }\n}\n\nfunction diffList(oldList, newList) {\n  let moves = [];\n  let nodes = [];\n\n  // 遍历旧节点\n  // 观察新节点在同一个位置有什么变化\n  oldList.forEach((item, i) => {\n    let newItem = newList[i] || null;\n    nodes.push(newItem);\n  });\n\n  console.log(nodes);\n\n  // 去除 null\n  // 如果新节点比旧节点数量减少了，就会出现null的情况\n  // 对于旧节点而言就是节点被 REMOVE 了\n  nodes.forEach((node, i) => {\n    if (node === null) {\n      moves.push({\n        index: i,\n        type: REMOVE,\n      });\n      // nodes.splice(i, 1);\n    }\n  });\n\n  nodes.forEach((node, i) => {\n    if (node === null) {\n      nodes.splice(i, 1);\n    }\n  });\n\n  if (nodes.length === 1 && nodes[0] === null) {\n    nodes = [];\n  }\n\n  newList.forEach((item, i) => {\n    item = utils.isArray(item) ? item[0] : item;\n    let nodeItem = nodes[i];\n    if (nodeItem) {\n      // 有key的情况\n    } else {\n      moves.push({\n        type: ORDER,\n        item,\n        index: i,\n      });\n    }\n  });\n\n  // console.log('diffList nodes', nodes);\n  // console.log('diffList moves', moves);\n\n  return {\n    moves,\n    nodes,\n  };\n}\n\nfunction diffProps(props, newProps) {\n  let propsPatches = {};\n\n  for (const key in props) {\n    if (newProps.hasOwnProperty(key) && newProps[key] !== props[key]) {\n      propsPatches[key] = newProps[key];\n    }\n  }\n\n  for (const key in newProps) {\n    if (!props.hasOwnProperty(key)) {\n      propsPatches[key] = newProps[key];\n    }\n  }\n\n  return propsPatches;\n}\n\nexport default diff;\n","import utils from './utils';\nimport { REMOVE, INSERT, PROPS, TEXT, REPLACE, ORDER } from './constants';\nimport createDOM from './createDOM';\n\n/**\n * patch 根据 diff 的结果对差异进行更新\n * @param {*} root HTML rootNode generated by vnode\n * @param {*} patches\n */\nfunction patch(root, patches) {\n  let index = 0;\n\n  patchNode(root, patches, index);\n}\n\nfunction patchNode(node, patches, index) {\n  let currentPatch = patches[index] || [];\n\n  currentPatch.forEach((patch, i) => {\n    switch (patch.type) {\n      case INSERT:\n        // console.log(node, patch, 'insert');\n        // console.log(patch.node);\n        break;\n      case REMOVE:\n        console.log(node, patch, 'remove');\n        node.parentNode.removeChild(node);\n        break;\n      case REPLACE:\n        // console.log(node, patch.node, 'replace');\n        const newNode = createDOM(patch.node);\n        node.parentNode.replaceChild(newNode, node);\n        break;\n      case ORDER:\n        // console.log(node, patch, 'reorder');\n        reorderChildren(node, patch.moves);\n        break;\n      case PROPS:\n        // console.log(node, patch.props, 'props');\n        utils.setAttrs(node, patch.props);\n        break;\n      case TEXT:\n        // console.log(node, patch, 'text');\n        // console.log(node.parentNode);\n        node.parentNode.textContent = patch.content;\n        // utils.setAttrs(node, patch.props);\n        break;\n    }\n  });\n\n  node.childNodes.forEach((node, i) => {\n    index++;\n    // console.log(node);\n    patchNode(node, patches, i + index);\n  });\n}\n\nfunction reorderChildren(node, moves) {\n  // console.log(node.childNodes);\n  const nodeList = [].slice.call(node.childNodes);\n  // console.log(nodeList);\n  moves.forEach(move => {\n    let index = move.index;\n    // console.log(move.index);\n    // console.log(move);\n    if (move.type === REMOVE) {\n      // console.log(index, nodeList[index], node.childNodes[index]);\n      // console.log(nodeList[index]);\n\n      node.removeChild(nodeList[index]);\n\n      // if (nodeList[index] === node.childNodes[index]) {\n      //   // console.log(move.index);\n      //   // console.log(node, nodeList[index], node.childNodes[index]);\n      //   // if (node.childNodes[index]) {\n      //   // console.log(node.childNodes[index]);\n      //   // node.removeChild(node.childNodes[index]);\n      //   // }\n      // }\n\n      // nodeList.splice(index, 1);\n      // console.log(index, nodeList);\n    } else if (move.type === ORDER) {\n      let insertNode = utils.isObject(move.item)\n        ? createDOM(move.item)\n        : document.createTextNode(move.item);\n\n      // console.log('insertNode: ');\n      // console.log(insertNode);\n      // console.log(node.childNodes[move.index]);\n      nodeList.splice(index, 0, insertNode);\n      node.insertBefore(insertNode, node.childNodes[index] || null);\n    }\n  });\n}\n\nexport default patch;\n","import createElement from './createElement';\nimport createDOM from './createDOM';\nimport render from './render';\nimport diff from './diff';\nimport patch from './patch';\n\nexport default { createElement, createDOM, render, diff, patch };\n","import easydom from '../src/index';\nconst { createElement } = easydom;\n\n// jsx 被 babel 编译后的格式\n// let vtree = createElement('div', { id: 'box' },\n//   createElement('p', { className: 'message', style: { color: '#36f' } }, 'hello walker'),\n//   createElement('ul', { className: 'lists' },\n//     createElement('li', null, 'Item 1'),\n//     createElement('li', null, 'Item 2'),\n//     createElement('li', null, 'Item 3')\n//   )\n// );\n\n// 这里使用 @babel/plugin-transform-react-jsx 解析\n// 只需实现 createElement 即可，名称可以自定义\nlet vtree = (\n  <div id=\"box\">\n    <p className=\"message\" style={{ color: '#36f' }}>\n      hello walker\n    </p>\n    <ul className=\"lists\">\n      <li>Item 1</li>\n      <li>Item 2</li>\n      <li>Item 3</li>\n    </ul>\n  </div>\n);\n// vtree = null;\n\nconsole.log('vtree: ', vtree);\n\nlet rootNode = easydom.createDOM(vtree);\n\nconsole.log('rootNode: ', rootNode);\n\neasydom.render(rootNode, document.getElementById('app'));\n\n// let newVtree = createElement('div', { className: 'new-box', id: 'box' },\n//   createElement('h1', { id: 'title' }, 'This is title'),\n//   createElement('p', { style: { color: '#f80' } }, 'hello walker, nice to meet you'),\n//   createElement('ul', { className: 'lists new-lists' },\n//     createElement('li', null, 'Item 1'),\n//     createElement('li', null, 'Item 4'),\n//   )\n// );\n\n// let newVtree = (\n//   <div id=\"box\" className=\"new-box\">\n\n//     <p style={{color: '#f80'}}>hello walker, nick to meet you</p>\n\n//   </div>\n// );\n\n/*\nlet newVtree = (\n  <div id=\"box\" className=\"new-box\">\n    <h1 id=\"title\">This is title</h1>\n    <p style={{color: '#f80'}}>hello walker, nick to meet you</p>\n    <ul className=\"lists new-lists\">\n      <li>Item 1</li>\n      <li>Item 4</li>\n    </ul>\n  </div>\n);\n\nlet patches = diff(vtree, newVtree);\n\nconsole.log('patches: ', patches);\n\npatch(rootNode, patches);\n*/\n\n// test jsx\n// let vdom1 = (\n//   <div class=\"box\">\n//     <p>1</p>\n//     <span>666</span>\n//     <ul>\n//       <li>item1</li>\n//       <li>item1</li>\n//       <li>item1</li>\n//     </ul>\n//   </div>\n// );\n// console.log(vdom1);\n\nlet count = 0;\n\nfunction createVtree() {\n  let items = [];\n\n  for (let i = 0; i < count; i++) {\n    // items.push(createElement('li', null, `Item ${i}`));\n    items.push(<li>{'Item ' + i}</li>);\n  }\n\n  let color = count % 2 === 0 ? '#36f' : '#f80';\n\n  return (\n    <div id=\"box\" className=\"new-box\">\n      <h1 id=\"title\">This is title</h1>\n      some text\n      <p style={{ color: color }}>hello walker, nick to meet you</p>\n      <ul className=\"lists new-lists\">{items}</ul>\n    </div>\n  );\n  // return createElement('div', { className: 'new-box', id: 'box' },\n  //   createElement('h1', { id: 'title' }, 'This is title'),\n  //   createElement('p', { style: { color: color } }, `hello walker, nice to meet you ${count}`),\n  //   createElement('ul', { className: 'lists new-lists' }, ...items)\n  // );\n}\n\nfunction renderTest() {\n  let newVtree = createVtree();\n  let patches = easydom.diff(vtree, newVtree);\n  // console.log(vtree, newVtree);\n  console.log('patches: ', patches);\n  easydom.patch(rootNode, patches);\n  vtree = newVtree;\n}\n\ndocument.getElementById('btn-start').onclick = function() {\n  count = 0;\n  renderTest();\n};\n\ndocument.getElementById('btn-add').onclick = function() {\n  count++;\n  renderTest();\n};\n\ndocument.getElementById('btn-remove').onclick = function() {\n  count--;\n  if (count < 0) count = 0;\n  renderTest();\n};\n"],"names":["utils","isType","type","target","Object","prototype","toString","call","forEach","setAttrs","el","props","key","indexOf","setAttribute","p","style","createElement","children","length","isArray","vnode","createDOM","isNull","document","createTextNode","isString","appendChild","bind","map","render","vdom","INSERT","REMOVE","REPLACE","ORDER","PROPS","TEXT","diff","tree","newTree","index","patches","diffNode","oldNode","newNode","currentPatch","push","content","propsPatches","diffProps","keys","diffChildren","node","oldChildren","newChildren","console","log","diffs","diffList","moves","nodes","i","oldList","newList","item","newItem","splice","nodeItem","newProps","hasOwnProperty","patch","root","patchNode","parentNode","removeChild","replaceChild","reorderChildren","textContent","childNodes","nodeList","slice","move","insertNode","isObject","insertBefore","easydom","vtree","color","rootNode","getElementById","count","createVtree","items","renderTest","newVtree","onclick"],"mappings":"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"}